
public class CalculadoraStack {
	String stack[];
	int top;

	public CalculadoraStack() {
		stack=new String[20];
		top=0;
	}


	public boolean evaluarOperador(String elemento) {
		if(elemento=="+"||elemento=="-"||elemento=="*"||elemento=="/"||elemento=="=")
			return true;
		else
			return false;
	}

	public int Operacion(String operador,int elem1, int elem2) {
		switch (operador) {
		case "+":
			return (elem1+elem2);

		case "-":
			return (elem1-elem2);

		case "*":
			return (elem1*elem2);

		case "/":
			return (elem1/elem2);
		}
		return -1;
	}

	public void push(String s)throws Exception {
		if(stack[0]!=null&&top<stack.length) {
			top++;
			stack[top]=s;
		}
		else if(stack[0]==null) {
			stack[top]=s;
		}
		else throw new Exception("STACK OVERFLOW");
	}


	public String peek() {
		return stack[top];
	}

	public String pop() {
		String result=null;
		if(top<stack.length) {
			result=stack[top];
			top--;
		}
		return result;
	}

	public void printResult() {
		pop();
	}

	public static void main(String[] args) throws Exception{
		String cadena="6 3 + 2 * =";
		CalculadoraStack calcu=new CalculadoraStack();
		String[]arreglo=cadena.split(" ");

		if(calcu.peek()!="=") {
			int x=0;
			for(x=0;x<arreglo.length;x++) {
				if(calcu.evaluarOperador(arreglo[x])==false) {
					calcu.push(arreglo[x]);
				}
				break;
			}
			int elemento1=Integer.parseInt(calcu.pop());
			int elemento2=Integer.parseInt(calcu.pop());
			String operacion=Integer.toString(calcu.Operacion(calcu.stack[x],elemento1,elemento2));
			calcu.push(operacion);
		}
		calcu.printResult();
	}
}
